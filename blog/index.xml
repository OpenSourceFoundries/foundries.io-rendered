<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Open Source Foundries, Ltd.</title>
    <link>https://opensourcefoundries.github.io/osfoundries-rendered/blog/</link>
    <description>Recent content in Blogs on Open Source Foundries, Ltd.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2017, Open Source Foundries, Ltd.; all rights reserved.</copyright>
    <lastBuildDate>Wed, 17 Jan 2018 13:50:46 +0200</lastBuildDate>
    
	<atom:link href="https://opensourcefoundries.github.io/osfoundries-rendered/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How To Manage LMP Containers</title>
      <link>https://opensourcefoundries.github.io/osfoundries-rendered/blog/2018/01/17/container-management/</link>
      <pubDate>Wed, 17 Jan 2018 13:50:46 +0200</pubDate>
      
      <guid>https://opensourcefoundries.github.io/osfoundries-rendered/blog/2018/01/17/container-management/</guid>
      <description>Introduction The Linux microPlatform uses a set of Docker containers to provide end-to-end services used by the Zephyr microPlatform. The containers and their configurations are deployed using a simple shell script that wraps Ansible. The scripts require a version of Ansible with Docker support. Some distro packages such as Ubuntu 16.04 don&amp;rsquo;t have this, so make sure you install Ansible from a proper source before continuing.
	+------------+ +-------------+ | | | | | LMP Device | | Host System | | 10.</description>
    </item>
    
    <item>
      <title>Simplify your life: multi-architecture docker containers</title>
      <link>https://opensourcefoundries.github.io/osfoundries-rendered/blog/2018/01/17/multi-arch-containers/</link>
      <pubDate>Wed, 17 Jan 2018 13:07:31 +0200</pubDate>
      
      <guid>https://opensourcefoundries.github.io/osfoundries-rendered/blog/2018/01/17/multi-arch-containers/</guid>
      <description>Introduction  “The great thing about Docker is that your developers run the exact same container as what runs in production.”
 This is what the Docker hype is about, creating reproducibile environments for applications. The technology enables us to create lightweight, secure microservices which run on an array of SoCs that can be updated over the air in a matter of seconds. We believe that accelerating code delivery will ultimately reduce time to market.</description>
    </item>
    
    <item>
      <title>microPlatform update 0.6</title>
      <link>https://opensourcefoundries.github.io/osfoundries-rendered/blog/2018/01/10/blog-post-update-0.6/</link>
      <pubDate>Wed, 10 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://opensourcefoundries.github.io/osfoundries-rendered/blog/2018/01/10/blog-post-update-0.6/</guid>
      <description>Zephyr microPlatform Summary The most significant change in this update follows the Linux microPlatform switch to a Linux v4.14-based tree. This impacts compatibility with any gateways relying on the old Bluetooth behavior, and also will cause changes to the MAC addresses reported by the Zephyr microPlatform sample applications. Users of the bt-joiner container whitelist feature in the Linux microPlatform will need to update their whitelists. Specifically, the leading D6:E7 in the MAC addresses must be changed to D4:E7.</description>
    </item>
    
    <item>
      <title>Opensource Bluetooth Low Energy (BLE) USB dongle</title>
      <link>https://opensourcefoundries.github.io/osfoundries-rendered/blog/2018/01/08/20180110-ble-dongle/</link>
      <pubDate>Mon, 08 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://opensourcefoundries.github.io/osfoundries-rendered/blog/2018/01/08/20180110-ble-dongle/</guid>
      <description>An open source USB dongle / BLE host radio If you&amp;rsquo;ve ever had to ship a product you know how frustrating a critical bug can be when your only driver is proprietary. Many times the problem may be in your code and not the vendor&amp;rsquo;s code, but it is often a difficult journey to find the root cause. Vendors have many customers and finding the right technical contact takes time, and without a compelling business case you may ultimately find that your use of the device is not standard and you end up at the back of the line, even sometimes forced to find a different component.</description>
    </item>
    
    <item>
      <title>microPlatform update 0.5</title>
      <link>https://opensourcefoundries.github.io/osfoundries-rendered/blog/2018/01/04/blog-post-update-0.5/</link>
      <pubDate>Thu, 04 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://opensourcefoundries.github.io/osfoundries-rendered/blog/2018/01/04/blog-post-update-0.5/</guid>
      <description>Zephyr microPlatform Summary The major change in this update is a non-fast-forward Zephyr repository tree based on the upstream 1.11 development tree.
Highlights  Non-fast-forward Zephyr update to 1.11 development tree  Components MCUBoot Features  Not addressed in this update  Bugs  Not addressed in this update  Zephyr Features Memory security improvements for ARC:  The ARC architecture has gained additional memory security support.  I2C for STM32F0:  The STM32F0 SoC family gained I2C support.</description>
    </item>
    
    <item>
      <title>microPlatform OpenCall meeting minutes</title>
      <link>https://opensourcefoundries.github.io/osfoundries-rendered/blog/2018/01/03/2018-jan-03-opencall/</link>
      <pubDate>Wed, 03 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://opensourcefoundries.github.io/osfoundries-rendered/blog/2018/01/03/2018-jan-03-opencall/</guid>
      <description>2018 January 3rd Open Call minutes Highlights OSF is now 3 months old and the microPlatforms are reaching full speed. We are working on a few final work items before we move from limited beta to a public beta state for the Zephyr and Linux microPlatforms.
New BLE Dongle efforts For our initial radio technology, we have chosen BLE (Bluetooth Low Energy) as it is the most mature and public radio technology that is available in both Linux and Zephyr projects.</description>
    </item>
    
    <item>
      <title>microPlatform update 0.4</title>
      <link>https://opensourcefoundries.github.io/osfoundries-rendered/blog/2017/12/13/blog-post-update-0.4/</link>
      <pubDate>Wed, 13 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://opensourcefoundries.github.io/osfoundries-rendered/blog/2017/12/13/blog-post-update-0.4/</guid>
      <description>Zephyr microPlatform Summary This is the final update for the Zephyr v1.10 development cycle.
The next update will be non-fast-forward update to the Zephyr repository, to begin development based on the v1.11 master branch.
Highlights  Zephyr tree based on v1.10  Components MCUBoot Features  Not addressed in this update  Bugs  Not addressed in this update  Zephyr Features  Not addressed in this update  Bugs Bluetooth fixes:  Notable fixes include over ten patches to Bluetooth Mesh, along with two fixes to the core BT controller code.</description>
    </item>
    
    <item>
      <title>microPlatform update 0.3</title>
      <link>https://opensourcefoundries.github.io/osfoundries-rendered/blog/2017/12/07/blog-post-update-0.3/</link>
      <pubDate>Thu, 07 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://opensourcefoundries.github.io/osfoundries-rendered/blog/2017/12/07/blog-post-update-0.3/</guid>
      <description>Zephyr microPlatform Summary This is the first Zephyr microPlatform update which uses the new CMake build system, which has replaced the use of Kbuild.
As described in the summary from https://foundries.io/mp/zmp/0.2, all users will need to update any out of tree application build systems.
Highlights  Zephyr tree from 1.10 release candidate, with CMake MCUBoot and FOTA sample build systems ported to CMake  Components MCUBoot Features CMake-based build system:  The Zephyr build system was rewritten to use cmake instead of Kbuild, following the equivalent upstream change.</description>
    </item>
    
    <item>
      <title>microPlatform update 0.2</title>
      <link>https://opensourcefoundries.github.io/osfoundries-rendered/blog/2017/11/16/blog-post-update-0.2/</link>
      <pubDate>Thu, 16 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://opensourcefoundries.github.io/osfoundries-rendered/blog/2017/11/16/blog-post-update-0.2/</guid>
      <description>Zephyr microPlatform Summary &amp;ldquo;This is the final release which uses the Linux kernel Kbuild build system. The next release will have a CMake-based build system. All out of tree applications will need updates to their build systems to move to CMake. Refer to the Zephyr Application Development Primer for details:
http://docs.zephyrproject.org/application/application.html&amp;quot;
Highlights  Final Zephyr commit before the build system moves to CMake MCUBoot memory and flash space optimizations  Components MCUBoot Features Simulator tests rewritten in Cargo test format:  &amp;ldquo;The simulator tests have been rewritten to use Rust&amp;rsquo;s native testing framework.</description>
    </item>
    
    <item>
      <title>microPlatform update 0.1</title>
      <link>https://opensourcefoundries.github.io/osfoundries-rendered/blog/2017/11/09/blog-post-update-0.1/</link>
      <pubDate>Thu, 09 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://opensourcefoundries.github.io/osfoundries-rendered/blog/2017/11/09/blog-post-update-0.1/</guid>
      <description>Zephyr microPlatform Summary This release includes a Zephyr tree from the the 1.10 development cycle. This tree does not yet include the conversion of the build system to CMake.
It includes an MCUBoot tree based on work done in the master branch following the v1.0.0 tag, which includes some work making it easier to port new boards to the bootloader than it was in that release.
Finally, several sample applications are included, with numerous improvements from publicly released versions.</description>
    </item>
    
  </channel>
</rss>